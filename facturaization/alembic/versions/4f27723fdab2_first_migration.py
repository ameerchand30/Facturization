"""first migration

Revision ID: 4f27723fdab2
Revises: 
Create Date: 2025-01-02 09:26:28.651226

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4f27723fdab2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_Product_name', table_name='Product')
    op.drop_table('Product')
    op.drop_index('ix_clients_id', table_name='clients')
    op.drop_index('ix_clients_name', table_name='clients')
    op.drop_table('clients')
    op.drop_index('ix_enterprises_id', table_name='enterprises')
    op.drop_index('ix_enterprises_name', table_name='enterprises')
    op.drop_table('enterprises')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('enterprises',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('postalCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('siretNo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='enterprises_client_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='enterprises_pkey')
    )
    op.create_index('ix_enterprises_name', 'enterprises', ['name'], unique=False)
    op.create_index('ix_enterprises_id', 'enterprises', ['id'], unique=False)
    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nationality', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('idNumber', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gender', postgresql.ENUM('M', 'F', 'O', name='gender_enum'), autoincrement=False, nullable=True),
    sa.Column('Billing_Street', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('City', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('State_Province', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Postal_Code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='clients_pkey')
    )
    op.create_index('ix_clients_name', 'clients', ['name'], unique=False)
    op.create_index('ix_clients_id', 'clients', ['id'], unique=False)
    op.create_table('Product',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ref_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Product_pkey')
    )
    op.create_index('ix_Product_name', 'Product', ['name'], unique=False)
    # ### end Alembic commands ###
